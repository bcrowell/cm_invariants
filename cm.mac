/*-----------------------------------------------------------------
  Carminati-McLenaghan invariants, 
    https://en.wikipedia.org/wiki/Carminati%E2%80%93McLenaghan_invariants
  (c) 2015 B. Crowell, GPL v. 2 licensed
 ------------------------------------------------------------------*/

/* Make sure the following have been calculated: */
cmetric(false)$
lriemann(false)$
uriemann(false)$
ricci(false)$ /* compute the ricci tensor ric[i,j]=R_ij */
uricci(false)$ /* compute the mixed ricci tensor uric[i,j]=R_i^j */
weyl(false)$ /* compute Weyl tensor */

/* R=R_i^i, the Ricci scalar, scalar curvature */
cm_r():=trigsimp(ratsimp(sum(uric[i,i],i,1,dim)))$
cm_r();

/* trace-free Ricci tensor, cm_s[i,j]=S_ij=R_ij-(1/4)Rg_ij */
array(cm_s,dim,dim);
for i thru dim do
  for j thru dim do
    cm_s[i,j] : ric[i,j]-(1/4)*cm_r()*lg[i,j]$
/* mixed version, cm_us[i,j]=S^i_j */
for i thru dim do
  for j thru dim do
    cm_us[i,j] : sum(ug[i,k]*cm_s[k,j],k,1,dim)$
/* fully contravariant version, cm_uus[i,j]=S^ij */
for i thru dim do
  for j thru dim do
    cm_uus[i,j] : sum(ug[j,k]*cm_us[i,k],k,1,dim)$

/* R_1=(1/4)S^i_j S^j_i */
cm_r1():=trigsimp(ratsimp((1/4)*sum(sum(cm_us[i,j]*cm_us[j,i],j,1,dim),i,1,dim)))$
cm_r1();

/* R_2=(-1/8)S^i_j S^j_k S^k_i */
cm_r2():=trigsimp(ratsimp((-1/9)*sum(sum(sum(cm_us[i,j]*cm_us[j,k]*cm_us[k,i],k,1,dim),j,1,dim),i,1,dim)))$
cm_r2();

/* R_3=(1/16)S^i_j S^j_k S^k_l S^l_i */
cm_r3():=trigsimp(ratsimp((1/16)*sum(sum(sum(sum(cm_us[i,j]*cm_us[j,k]*cm_us[k,l]*cm_us[l,i],
                                        l,1,dim),k,1,dim),j,1,dim),i,1,dim)))$
cm_r3();

/* Input p is an array of dim integers; this routine is meant to be used for small arrays, will
   not have good performance on large arrays.
   Returns -1, 0, or +1, depending on whether p is an even or odd permutation away from being sorted.
   Algorithm: http://math.stackexchange.com/a/290787/13618
*/
cm_parity(p):= block
(
  result:1,
  n:length(p),
  for i: 1 thru n-1 do
    for j: i+1 thru n do block (
      if p[i]>p[j] then result:-result,
      if is(equal(p[i],p[j])) then result:0
    ),
  result
)$

/* Levi-Civita tensor 
  This is the tensorial quantity. The orientation is defined implicitly by the order of the coordinates in
        the coordinate chart chosen.
  This is not tested yet.
*/
array(cm_eps,dim,dim,dim,dim);
cm_root_gdet:sqrt(-gdet); /* gdet is determinant of metric, computed by cmetric */
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_eps[i,j,k,l] : trigsimp(ratsimp(cm_root_gdet*cm_parity([i,j,k,l])));

/* mixed form of Weyl tensor, C_ij^kl
  ctensor docs don't actually say whether weyl[] is all lower-index...?
*/
array(cm_weyl_mixed,dim,dim,dim,dim);
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_weyl_mixed[i,j,k,l] : trigsimp(ratsimp(sum(sum(
            ug[k,m]*ug[l,n]*weyl[i,j,m,n],
          m,1,dim),n,1,dim)))
$

/* upper-index form of Weyl tensor, C^ijkl
*/
array(cm_weyl_upper,dim,dim,dim,dim);
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_weyl_upper[i,j,k,l] : trigsimp(ratsimp(sum(sum(
            ug[i,m]*ug[j,n]*cm_weyl_mixed[m,n,k,l],
          m,1,dim),n,1,dim)));


/* left Hodge dual of Weyl tensor, *C_ijkl */
array(cm_c_star,dim,dim,dim,dim);
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_c_star[i,j,k,l] : trigsimp(ratsimp(sum(sum(
            (1/2)*cm_eta[k,l,m,n]*cm_weyl_mixed[i,j,m,n],
          m,1,dim),n,1,dim)));

/* mixed form, *C_ij^kl */
array(cm_c_star_mixed,dim,dim,dim,dim);
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_c_star_mixed[i,j,k,l] : sum(sum(
            ug[k,m]*ug[l,n]*cm_c_star[i,j,m,n],
          m,1,dim),n,1,dim);

/* mixed form, *C^ijkl */
array(cm_c_star_upper,dim,dim,dim,dim);
for i thru dim do
  for j thru dim do
    for k thru dim do
      for l thru dim do
        cm_c_star_upper[i,j,k,l] : trigsimp(ratsimp(sum(sum(
            ug[i,m]*ug[j,n]*cm_c_star_mixed[m,n,k,l],
          m,1,dim),n,1,dim)));


cm_w1_real():=trigsimp(ratsimp(
  (1/8)*sum(sum(sum(sum(
    weyl[a,b,c,d]*cm_weyl_upper[a,b,c,d],
  a,1,dim),b,1,dim),c,1,dim),d,1,dim)
))$
cm_w1_real();

cm_m3():=trigsimp(ratsimp(
  (1/16)*sum(sum(sum(sum(sum(sum(
    cm_uus[b,c]*cm_s[e,f]*(weyl[a,b,c,d]*cm_weyl_upper[a,e,f,d]+cm_c_star[a,b,c,d]*cm_c_star_upper[a,e,f,d]),
  a,1,dim),b,1,dim),c,1,dim),d,1,dim),e,1,dim),f,1,dim)
))$
cm_m3();
